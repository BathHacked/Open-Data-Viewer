{"version":3,"sources":["config.js","themes/example.js","services/overpass.js","components/popup/popup.js","components/map/map.js","components/sidebar/sidebar.js","components/navbar/navbar.js","components/spinner/spinner.js","components/infoModal/informationModal.js","components/mapThemesModal/mapThemesModal.js","App.js","serviceWorker.js","index.js","services/query-overpass.js"],"names":["appConfig","mapConfig","center","zoom","attributionControl","zoomControl","maxBounds","uri","params","minZoom","attribution","id","accessToken","viewbox","bounded","limit","appThemes","Name","Title","Headline","Description","Author","AttributeTags","attributeName","attributeTag","attributeValues","icon","overpassQuery","mapIcon","color","type","iconColor","overpassGeoJSON","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","queryOverpass","then","osmData","data","geojson","elements","osmtogeojson","flatProperties","catch","err","console","error","stop","this","_x","apply","arguments","AddressDetails","props","address","addressDetails","Map","set","addressTags","keys","forEach","addressTag","addr","split","includes","addressItems","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","undefined","_step3","_iterator3","values","Symbol","iterator","done","value","push","return","join","parseAddress","react_default","createElement","Fragment","className","name","FeatureDetails","hasFeatureDetails","phone","website","wheelchair","featureDetails","href","target","rel","data-toggle","WheelchairAccess","OpeningTimes","openTimesList","opening_hours","serviceTimesList","service_times","openTimesListElement","length","map","oTime","splitTimes","trim","days","times","key","concat","indexOf","ThemeDetails","themeDetailsList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","theme","attribute","featureTagValue","featureTagList","attributeValuesList","attributeType","featureHasAttributeValue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tag","toLowerCase","attributeDetail","style","wheelchairAccess","Popup","element","ReactDOMServer","renderToString","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mapNode","geoJSONLayers","loadingTheme","setTheme","bind","assertThisInitialized","updateMapThemes","createCustomMarker","bindCustomPopup","init","themeToggle","_this2","L","control","scale","position","addTo","tileLayer","zoomReset","setResetZoom","addControl","searchControl","setLocationSearch","themes","provider","OpenStreetMapProvider","GeoSearchControl","searchLabel","autoClose","keepResult","Control","onAdd","controlDiv","DomUtil","create","controlZoomReset","title","DomEvent","addListener","setView","options","_this3","setMaps","_this4","geoJSON","onEachFeature","pointToLayer","createGeoJSONPoints","geoJSONLayer","eachLayer","layer","addLayer","dataLoaded","_this5","geoJSONPoints","feature","geometry","polygonProps","properties","getBounds","getCenter","markerGeoJson","marker","toGeoJSON","pointLayer","bindPopup","latlng","awesomeMarker","AwesomeMarkers","markerColor","prefix","themeName","ex","removeLayer","_this6","ref","node","React","Component","Sidebar","switchTheme","currentState","updateAppTheme","defineProperty","onClick","e","data-id","BurgerMenu","noOverlay","generateMenuItems","navbar_navbar","data-target","aria-controls","aria-expanded","aria-label","spinner_spinner","showSpinner","role","informationModal","tabIndex","aria-labelledby","aria-hidden","data-dismiss","mapThemesModal_mapThemesModal","themeInfo","App","state","themeVisibility","loadedThemes","setThemeState","onDataLoad","themeStatus","setState","objectSpread","toConsumableArray","sidebar_Sidebar","map_Map","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","retry","require","fetch","stringify","module","exports","query","endpoint","redirect","headers","accept","res","ok","Error","statusText","statusCode","status","json","Array","isArray","minTimeout"],"mappings":"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","file":"static/js/main.dd145c13.chunk.js","sourcesContent":["import { councilAdvice, food, recycling, digiAccess } from \"./themes/example\";\n\n/* App config.\nmapConfig stores options for Leaflet maps.   tileLayer defines the provider\nfor background mapping.\n*/\n\nconst appConfig = {\n    Title: \"B&NES\",\n    SubTitle: \"Local Services\",\n    Info: \"This map can help you find the location of useful local services in Bath & North East Somerset.\"\n};\n\nconst mapConfig = {\n    params: {\n        center: [51.38257, -2.35870],\n        zoom: 13,\n        attributionControl: true,\n        zoomControl: false,\n        maxBounds: ([[51.2, -2.651138], [51.5, -2.204475]]),\n    },\n    tileLayer: {\n        uri: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png\",\n        params: {\n            minZoom: 11,\n            attribution: \"&copy; OpenStreetMap contributors &amp; <a href=&quot;https://wikimediafoundation.org/wiki/Maps_Terms_of_Use&quot;>Wikimedia</a>\",\n            id: '',\n            accessToken: ''\n        },\n    },\n    search: {\n        // Defines the parameter for OSM nominatim search\n        // See https://wiki.openstreetmap.org/wiki/Nominatim for details on search params\n        viewbox: \"-2.744865,51.253106,-2.110405,51.457216\",\n        bounded: 1,\n        limit: 10\n    }\n};\n\nconst appThemes = [councilAdvice, food, recycling, digiAccess];\n\nexport {\n    mapConfig, appThemes, appConfig\n};\n","const councilAdvice = {\n    Name: \"councilAdvice\",\n    Title: \"Council Help & Advice \",\n    Headline: \"Shows the location of council advice centres\",\n    Description: \"Shows the location of council advice centres\",\n    Author: \"Leigh Dodds\",\n    AttributeTags: [\n        {   attributeName: \"Council Advice\",\n            attributeTag: \"advice_service\",\n            attributeValues: [\"citizens_advice\"],\n            icon: \"hands-helping\"\n        }\n    ],\n    overpassQuery: `[out:json];\\\n        (way[\"amenity\"=\"advice_service\"](around:20000,51.38257, -2.35870);\\\n        node[\"amenity\"=\"advice_service\"](around:20000,51.38257, -2.35870););\\\n        out body;>;out skel qt;`,\n    mapConfig: {\n         mapIcon: \"hands-helping\",\n         color: \"blue\"\n    }\n};\n\nconst recycling = {\n    Name: \"recycling\",\n    Title: \"Recycling Centres\",\n    Headline: \"Shows the location of recycling centres\",\n    Description: \"Shows the location of recycling centres\",\n    Author: \"Leigh Dodds\",\n    AttributeTags: [\n    ],\n    overpassQuery: `[out:json];\\\n        (way[\"recycling_type\"=\"centre\"](around:20000,51.38257, -2.35870);\\\n        node[\"recycling_type\"=\"centre\"](around:20000,51.38257, -2.35870););\\\n        out body;>;out skel qt;`,\n    mapConfig: {\n         mapIcon: \"recycle\",\n         color: \"green\"\n    }\n};\n\nconst food = {\n    Name: \"food\",\n    Title: \"Community Food Provision\",\n    Headline: \"Shows the location of local food banks and community kitchens\",\n    Description: \"Shows the location of local food banks and community kitchens\",\n    Author: \"Leigh Dodds\",\n    AttributeTags: [\n        {   attributeName: \"Food Bank\",\n            attributeTag: \"social_facility\",\n            attributeValues: [\"food_bank\"],\n            icon: \"shopping-basket\"\n        },\n        {   attributeName: \"Community Kitchen\",\n            attributeTag: \"social_facility\",\n            attributeValues: [\"soup_kitchen\"],\n            icon: \"utensils\"\n        },\n        {\n          attributeName:\"Information\",\n          type:\"description\",\n          attributeTag:\"description\",\n          attributeValues:[],\n          icon:\"info-circle\",\n          iconColor:\"#6495ED\"\n        }\n\n    ],\n    overpassQuery: `[out:json];\\\n        (way[\"social_facility\"~\"(food_bank|soup_kitchen)$\"](around:20000,51.38257, -2.35870);\\\n        node[\"social_facility\"~\"(food_bank|soup_kitchen)$\"](around:20000,51.38257, -2.35870););\\\n        out body;>;out skel qt;`,\n    mapConfig: {\n         mapIcon: \"utensils\",\n         color: \"orange\"\n    }\n};\n\nconst digiAccess = {\n    Name: \"digitalAccess\",\n    Title: \"Community Digital Access\",\n    Headline: \"Shows community locations that provides access to digital Services\",\n    Description: \"This theme shows community locations that provide access to digital services.  These include access to \" +\n    \"printing facilities, access to computers for public use and Wifi / internet access\",\n    Author: \"Leigh Dodds\",\n    AttributeTags: [\n         {  attributeName: \"Internet Access\",\n            attributeTag: \"internet_access\",\n            attributeValues: [\"wlan\", \"yes\", \"terminal\", \"wifi\", \"service\"],\n            icon: \"wifi\"\n        },\n        {   attributeName: \"Printing Facilities\",\n            attributeTag: \"digital_access\",\n            attributeValues: [\"printer\"],\n            icon: \"print\"\n        },\n        {   attributeName: \"Computer Access\",\n            attributeTag: \"digital_access\",\n            attributeValues: [\"computer\"],\n            icon: \"desktop\"\n        },\n        {   attributeName: \"Membership Required\",\n            attributeTag: \"digital_access:membership\",\n            attributeValues: [\"yes\"],\n            icon: \"exclamation\",\n            iconColor: \"red\"\n        },\n\n    ],\n    overpassQuery: `[out:json];\\\n        (way[\"amenity\"~\"(library|community_centre)$\"][~\"^(internet_access|digital_access)$\"~\".\"](around:20000,51.38257, -2.35870);\\\n        node[\"amenity\"~\"(library|community_centre)$\"][~\"^(internet_access|digital_access)$\"~\".\"](around:20000,51.38257, -2.35870););\\\n        out body;>;out skel qt;`,\n    mapConfig: {\n         mapIcon: \"wifi\",\n         color: \"red\"\n    }\n    };\n\nexport {\n    councilAdvice, food, recycling, digiAccess\n};\n","import queryOverpass from './query-overpass';\nimport osmtogeojson from 'osmtogeojson';\n\nvar toGeoJSON = (data) => {    \n   const geojson = osmtogeojson(data, {\n        flatProperties: true\n    });\n    return geojson\n};\n\nconst overpassGeoJSON = async (overpassQuery) => {\n    return new Promise((resolve, reject) => {\n        queryOverpass(overpassQuery)\n        .then((osmData) => {\n            const geojson = toGeoJSON({elements: osmData}, {flatProperties: true});\n            resolve(geojson);\n        })\n        .catch((err) => {\n            console.error(err);\n            reject('Error: the overpass API request was not completed')\n        })\n    });\n}\n\nexport default overpassGeoJSON;\n\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport './popup.css';\n\n/**\n * React function component describes an OSM feature name and address\n * @return {React Component}\n */\nfunction AddressDetails(props) {\n    const address = parseAddress(props);\n    return (\n        <React.Fragment>\n            <h6 className=\"mb-0\">{props.name}</h6>\n            {address &&\n                <p className=\"mb-1 mt-0 text-muted\">\n                    {address}<br/>\n                </p>\n            }\n        </React.Fragment>\n    );\n}\n\n/**\n * React function component describes an OSM feature deatails- phone, website\n * @param props - OSM feature properties\n * @return {React Component}\n */\nfunction FeatureDetails(props) {\n    const hasFeatureDetails = !!(props.phone || props.website || props.wheelchair);\n    if (!hasFeatureDetails) { return null };\n\n    const featureDetails = (\n        <React.Fragment>\n            {props.phone &&\n                <div>\n                    <span className=\"fa fa-phone service-icon\"></span>\n                    <span>{props.phone}</span>\n                </div>\n            }\n            {props.website &&\n                <div>\n                    <span className=\"fa fa-globe-europe service-icon\"></span>\n                    <span><a href={props.website} target=\"_blank\" rel=\"noopener noreferrer\">Website</a></span>\n                </div>\n            }\n        </React.Fragment>\n    );\n\n    return (\n        <div className=\"pt-2\"> {hasFeatureDetails &&\n            <a className=\"text-decoration-none text-reset\" data-toggle=\"collapse\" href=\"#featureDetails\">\n                <em>Details</em>\n                <span className=\"fa fa-chevron-down service-icon\"></span>\n            </a>\n            }\n            <div className=\"collapse\" id=\"featureDetails\">\n                <table className=\"table-sm\">{featureDetails}</table>\n                <WheelchairAccess {...props}/>\n            </div>\n        </div>\n    );\n}\n\n\n/**\n * React function component describes the opening times of an OSM feature\n * @param props - OSM feature properties\n * @return {React Component}\n */\nfunction OpeningTimes(props) {\n\n    let openTimesList = props.opening_hours ? props.opening_hours.split(\";\") : null;\n    let serviceTimesList = props.service_times ? props.service_times.split(\";\") : null;\n    if (serviceTimesList) {\n        /* We make a decision here that service times overrides opening times.   We could display both but 'srvice times\n        may be confusing to the user */\n        openTimesList = serviceTimesList;\n    }\n\n    let openTimesListElement = null;\n\n    if (openTimesList) {\n        if(openTimesList.length === 1){\n            // Assume here we have a free text entry into the opening times tag, so return the text as is.\n            openTimesListElement = (\n                <tr>\n                    <td className=\"opening-times-td\">{openTimesList[0]}</td>\n                </tr>\n            )\n        }\n        else {\n            openTimesListElement = openTimesList.map((oTime) => {\n                let splitTimes = oTime.trim().split(\" \");\n                let days = splitTimes[0];\n                let times = splitTimes[1];\n                let openTimesElement = (\n                    <tr key={`open + ${openTimesList.indexOf(oTime)}`}>\n                        <td className=\"opening-times-td\">{days}</td>\n                        <td className=\"opening-times-td\">{times}</td>\n                    </tr>\n                );\n                return openTimesElement;\n            });\n        }\n    }\n\n    const element = (\n        <div className=\"pt-2\"> {openTimesList &&\n            <div>\n                <a className=\"text-decoration-none text-reset\" data-toggle=\"collapse\" href=\"#address\">\n                    <em>Opening Times</em>\n                    <span className=\"fa fa-chevron-down service-icon\"></span>\n                </a>\n            </div>\n            }\n            <div className=\"collapse\" id=\"address\">\n                <table className=\"table-sm\">{openTimesListElement}</table>\n            </div>\n        </div>\n    );\n    return element;\n}\n\n/**\n * React function component describes the attributes associated with an OSM feature\n * @param props - OSM feature properties\n * @return {React Component}\n */\nfunction ThemeDetails(props) {\n    let themeDetailsList = [];\n\n    for (let attribute of props.theme.AttributeTags) {\n        let featureTagValue = props.props[attribute.attributeTag];\n        if (!featureTagValue) {\n            continue;\n        }\n\n        /* The tag value might be a ';' delimited list (An osm convention) so we need to check for\n         this possibility */\n        let featureTagList = featureTagValue.split(';');\n\n        let attributeValuesList = attribute.attributeValues;\n        let attributeType = attribute.type;\n\n        let featureHasAttributeValue = false;\n        if (attributeValuesList.length === 0 ) {\n            // Empty list in config signifies that all values are permitted\n            featureHasAttributeValue = true;\n        } else {\n            for (let tag of featureTagList) {\n                if (attributeValuesList.includes(tag.toLowerCase())) {\n                    featureHasAttributeValue = true;\n                    break;\n                }\n            }\n        }\n\n        if (featureHasAttributeValue) {\n            let attributeDetail = (\n                <div className=\"pt-1\" key={attribute.attributeName}>\n                    {(attributeType && attributeType === \"description\")\n                        ? <div className=\"media\">\n                            <div className=\"feature-icon-container d-flex justify-content-center\">\n                                <div>\n                                    <span className={`fa fa-${attribute.icon}`} style={{color: attribute.iconColor}}></span>\n                                </div>\n                            </div>\n                            <div className=\"media-body\">\n                                {featureTagValue}\n                            </div>\n                        </div>\n                        : <div className=\"media\">\n                            <div className=\"feature-icon-container d-flex justify-content-center\">\n                                <div>\n                                    <span className={`fa fa-${attribute.icon} icon-centre`} style={{color: attribute.iconColor}}></span>\n                                </div>\n                            </div>\n                            <div className=\"media-body\">\n                                {attribute.attributeName}\n                            </div>\n                        </div>\n                    }\n                </div>\n            );\n            themeDetailsList.push(attributeDetail);\n        }\n    }\n\n    if (themeDetailsList.length > 0) {\n        const element = (\n            <div className=\"pt-1\">\n                <div>\n                    <em>{props.theme.Title}</em><br/>\n                    {themeDetailsList}\n                </div>\n            </div>\n        );\n        return element;\n        } else {\n            return null;\n        }\n    }\n\n/**\n * React function component describes Wheelchair accessibility\n * @param props - OSM feature properties\n * @return {React Component}\n */\nfunction WheelchairAccess(props) {\n    let wheelchairAccess = props['wheelchair'];\n    if (!wheelchairAccess) {return null};\n\n    const element = (\n        <div>\n            {wheelchairAccess.toLowerCase() === 'yes' &&\n            <div>\n                <span className=\"fa fa-wheelchair service-icon wheelchair-access\"></span>\n                <span>Wheelchair Accessible</span>\n            </div>\n\n            }\n            {wheelchairAccess.toLowerCase() === 'no' &&\n            <div>\n                <span className=\"fa fa-wheelchair service-icon wheelchair-no-access\"></span>\n                <span>No wheelchair access</span>\n            </div>\n            }\n            {wheelchairAccess.toLowerCase() === 'limited' &&\n            <div>\n                <span className=\"fa fa-wheelchair service-icon wheelchair-partial-access\"></span>\n                <span>Limited wheelchair access</span>\n            </div>\n            }\n        </div>\n    );\n\n    return element;\n}\n\n/**\n * React Function component defines an information popup for Leaflet\n * @param props - osm feature props\n * @return {string} The react element rendered as a string\n */\nfunction Popup(props, theme) {\n\n    const element = (\n            <div>\n                <AddressDetails {...props}/>\n                <ThemeDetails props={props} theme={theme}/>\n                <FeatureDetails {...props} />\n                <OpeningTimes {...props} />\n            </div>\n    );\n    // Return a string as this is format required by leaflet to bind to a feature\n    return ReactDOMServer.renderToString(element);\n}\n\n\n/**\n * Parse OSM address tags from format <\"addr:city\":\"cityName\"> to an address string\n * @param props - osm feature properties\n * @return {string} Parsed address object \"housenumber, street, place, city, postcode\"\n */\nfunction parseAddress(props){\n\n    /* A Map() data structure allows us to add address details in the order we want to\n    return them went we iterate over the Map object, this allowing us to return the address\n    in a defined hierarchy\n    */\n    let addressDetails = new Map();\n\n    addressDetails.set('housenumber', null);\n    addressDetails.set('street', null);\n    addressDetails.set('place', null);\n    addressDetails.set('city', null);\n    addressDetails.set('postcode', null);\n\n    const addressTags = [\"housenumber\", \"street\", \"place\", \"city\", \"postcode\"];\n    // Populate our parsedAddress object with address details\n    Object.keys(props).forEach(addressTag => {\n        let addr = addressTag.split(\":\")[1];  // AddressTag will be in the form \"addr:xx\"\n        if (addressTags.includes(addr)) {\n            addressDetails.set(addr, props[addressTag]);\n        }\n    });\n\n    let addressItems = [];\n    for (let value of addressDetails.values()) {\n        if (value !=null) {\n            addressItems.push(value);\n        }\n    }\n    return addressItems.join(', ');\n}\n\nexport {\n    Popup\n};\n","import React from 'react';\nimport L from 'leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet-geosearch/assets/css/leaflet.css';\nimport './map.css';\nimport 'leaflet.awesome-markers';\nimport 'leaflet.awesome-markers/dist/leaflet.awesome-markers.css';\nimport { mapConfig }from '../../config.js';\nimport queryOverpass  from '../../services/overpass.js';\nimport { Popup } from \"../popup/popup\";\n\nexport default class Map extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.mapNode = null;\n        this.map = null;\n        this.geoJSONLayers = {};\n        this.loadingTheme = null;\n\n        // Bind class methods\n        this.setTheme = this.setTheme.bind(this);\n        this.updateMapThemes = this.updateMapThemes.bind(this);\n        this.createCustomMarker = this.createCustomMarker.bind(this);\n        this.bindCustomPopup = this.bindCustomPopup.bind(this);\n    }\n\n    componentDidMount() {\n        // Initialise map\n        this.init(this.mapNode);\n    }\n\n    componentDidUpdate() {\n        (this.props.themeToggle && this.updateMapThemes());\n    }\n\n    init(id) {\n        // A reference to the leaflet map is stored in the component properties\n        this.map = L.map(id, mapConfig.params);\n\n        L.control.scale({ position: \"bottomright\"}).addTo(this.map);\n        L.control.zoom({ position: 'topright' }).addTo(this.map);\n        L.tileLayer(mapConfig.tileLayer.uri, mapConfig.tileLayer.params).addTo(this.map);\n\n        const zoomReset = this.setResetZoom();\n        this.map.addControl(zoomReset);\n\n        const searchControl = this.setLocationSearch();\n        this.map.addControl(searchControl);\n\n        // Add geojson data from the OSM API\n        this.props.themes.forEach(theme => {\n            this.setTheme(theme);\n        });\n    }\n\n    /**\n     * Set the OSM Nominatim search control\n     */\n    setLocationSearch() {\n        const params = mapConfig.search;\n        const provider = new OpenStreetMapProvider({params: params});\n        const searchControl = new GeoSearchControl({\n            provider: provider,\n            style: 'button',\n            position: 'topright',\n            searchLabel: 'Search for a location or feature',\n            autoClose: true,\n            keepResult: true\n        });\n\n        return searchControl;\n    }\n\n    /**\n     * Defines a custom zoom control to reset map to default zoom\n     * @return {L.Control}\n     */\n    setResetZoom() {\n        const control = new L.Control({position: 'topright'});\n        control.onAdd = map => {\n            const controlDiv = L.DomUtil.create('div', 'leaflet-control-zoom leaflet-bar leaflet-control');\n            const controlZoomReset = L.DomUtil.create('a', 'leaflet-control-zoom fa fa-globe fa-2x', controlDiv);\n            controlZoomReset.title = \"Reset Map View\";\n\n            L.DomEvent\n                .addListener(controlZoomReset, 'click', function () {\n                    map.setView(map.options.center, map.options.zoom);\n                }, controlZoomReset);\n            return controlDiv;\n        };\n        return control;\n    }\n\n    \n    /**\n    * Sets a geojson theme as a layer on the mapNode\n    * @param {object} theme - A theme description object\n    */\n    setTheme(theme) {\n        queryOverpass(theme.overpassQuery)\n        .then((osmData) => {\n            this.setMaps(osmData, theme);\n        })\n        .catch((err) => {\n            console.error(err);\n        })\n    }\n\n    setMaps(osmData, theme) {        \n        this.loadingTheme = theme;\n\n        /* A reference to a geojson layer is stored in the class prop geoJSONLayers object\n        in the format {layerName: <instance of L.Layer>}, this allows us to reference\n        it later when we want to add / remove layers from the map.\n        */\n        \n        this.geoJSONLayers[theme.Name] = L.geoJSON(osmData, {\n            onEachFeature: this.bindCustomPopup,\n            pointToLayer: this.createCustomMarker\n        });\n\n        /* The geojson data received from OSM may include both points (nodes) and polygons(ways), but\n        leaflet only adds markers to points by default. To get around this, points are created for each\n        polygon centroid and then added to the osm geojson layer.\n        */\n        const geoJSONPointLayers = this.createGeoJSONPoints(this.geoJSONLayers[theme.Name]);\n\n        geoJSONPointLayers.forEach((geoJSONLayer) => {\n            geoJSONLayer.eachLayer(layer => {\n                this.geoJSONLayers[theme.Name].addLayer(layer)\n            })\n        });\n\n        this.geoJSONLayers[theme.Name].addTo(this.map);\n        this.props.dataLoaded(theme);\n    }\n\n    /**\n     * Converts any polygon features within an L.geoJSON layer to a point based on the polygon centroid.\n     * Feature properties from the polygon are copied across to the point, and custom markers and popups added\n     * @param {L.geoJSON} geoJSONLayer\n     * @return {Array} - Array of L.GeoJSON objects\n     */\n    createGeoJSONPoints(geoJSONLayer) {\n        const geoJSONPoints = [];\n        geoJSONLayer.eachLayer(layer => {\n            if (layer.feature.geometry.type === 'Polygon') {\n                const polygonProps = layer.feature.properties;\n                const bounds = layer.getBounds();\n                const center = bounds.getCenter();\n                const marker = new L.marker(center);\n                const markerGeoJson = marker.toGeoJSON();\n\n                const pointLayer = L.geoJSON(markerGeoJson, {\n                    pointToLayer: this.createCustomMarker,\n                    onEachFeature: (feature, layer) => {\n                    // Copy across the feature properties from the polygon to point\n                        layer.feature.properties = polygonProps;\n                        if (feature.properties.name) {\n                            layer.bindPopup(Popup(layer.feature.properties, this.loadingTheme))\n                        }\n                    }\n                });\n                geoJSONPoints.push(pointLayer);\n            }\n        });\n        return geoJSONPoints;\n    }\n\n    /**\n     * Creates custom AwesomeMarker at specified lat / long\n     * @param feature - geoJSON point feature passed by leaflet by default\n     * @param {L.latlng} latlng - feature coordinates in lat / long\n     * @return {L.marker}\n     */\n    createCustomMarker(feature, latlng) {\n        const awesomeMarker = L.AwesomeMarkers.icon({\n            icon: this.loadingTheme.mapConfig.mapIcon,\n            markerColor: this.loadingTheme.mapConfig.color,\n            prefix: 'fa',\n        });\n        return L.marker(latlng, {icon:awesomeMarker})\n    }\n\n    /**\n     * Binds a popup to a geojson point feature.  Polygon geometries are ignored\n     * @param feature\n     * @param {L.geoJSON} layer\n     */\n    bindCustomPopup(feature, layer) {\n        if (layer.feature.geometry.type === 'Polygon') return;\n        (feature.properties.name && layer.bindPopup(Popup(layer.feature.properties, this.loadingTheme)))\n    }\n\n    /**\n     * Adds / removes a layer from the map based on the themeChange object\n     * passed to the component - {themeName: status}, where status is either\n     * true (visible) or false (not visible)\n     */\n    updateMapThemes() {\n        const themeName = Object.keys(this.props.themeToggle)[0];\n        const themeStatus = this.props.themeToggle[themeName];\n\n        if (themeStatus) {\n            try {\n                this.map.addLayer(this.geoJSONLayers[themeName]);\n            } catch (ex) {\n                /* No action taken on the exception.  Here, we are just trying to catch Leaflet errors caused by\n                passing a dud link to a layer, which will cause Leaflet to complain.\n                 */\n            }\n        }\n        else {\n            try {\n                this.map.removeLayer(this.geoJSONLayers[themeName]);\n            }\n            catch (ex) {\n                // Ignoring this exception - see comment above\n            }\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div id=\"page-wrap\"> \n                <div ref={(node) => this.mapNode = node} id=\"map\" />;\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport './sidebar.css';\nimport 'leaflet.awesome-markers/dist/leaflet.awesome-markers.css';\n\nexport default class Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.switchTheme = this.switchTheme.bind(this);\n    }\n\n    /**\n     * Toggles a theme between true (visible) or false (not visible)\n     * @param themeName\n     */\n    switchTheme(themeName) {\n        const currentState = this.props.themeToggle[themeName];\n        this.props.updateAppTheme({[themeName]: !currentState});\n    }\n\n    generateMenuItems() {\n        return (this.props.themes.map((theme) =>\n            <div className=\"menu-item\" key=\"{'menuItem' + this.props.themes.indexOf(theme)}\">\n                <div className={this.props.themeToggle[theme.Name] ? 'theme-active media' : 'theme-disable media'}\n                     onClick={((e) => this.switchTheme(theme.Name))} data-id={theme.Name}>\n                    <div className={`align-self-end mr-3 awesome-marker-icon-${theme.mapConfig.color} awesome-marker`}>\n                        <i className={`fa fa-${theme.mapConfig.mapIcon} icon-white fa-inverse`}></i>\n                    </div>\n                    <div className=\"media-body\">\n                        <h6 className=\"mt-2 active\">{theme.Title}</h6>\n                    </div>\n                </div>\n            </div>\n        ));\n    }\n\n    render() {\n        return (\n            <Menu noOverlay>\n                <div className=\"menu-item\">\n                    <h4 className=\"theme-active\">Our Services</h4>\n                </div>\n                {this.generateMenuItems()}\n            </Menu>\n        );\n    }\n};","import React from 'react';\nimport './navbar.css';\nimport { appConfig } from '../../config';\n\nexport default () => {\n    return (\n        <React.Fragment>\n            <nav className=\"navbar fixed-top navbar-expand-sm navbar-dark navbar-component-top navbar-style\">\n                <button className=\"navbar-brand btn btn-unstyled navbar-btn-style\">{appConfig.Title}<span className=\"secondary-title\"> - {appConfig.SubTitle}</span></button>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-unstyled navbar-btn-style\"\n                                    data-toggle=\"modal\" data-target=\"#infoModal\">\n                                About <span className=\"fa fa-info-circle\"></span></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-unstyled navbar-btn-style\"\n                                    data-toggle=\"modal\" data-target=\"#themeModal\">Map Themes\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport './spinner.css';\n\nexport default (props) => {\n    return (\n        <React.Fragment>\n            {props.showSpinner &&\n                <div className=\"spinner-border text-secondary spinner-center\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            }\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { appConfig } from '../../config';\n\nexport default () => {\n    return (\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex=\"-1\" role=\"dialog\"\n             aria-labelledby=\"modalTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h4 className=\"modal-title font-weight-bold\" id=\"modalTitle\">{appConfig.Title} - {appConfig.SubTitle}</h4>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>\n                            { appConfig.Info }\n                        </p>\n                        <p>\nYou can use the menu on the left hand side of the screen to select the type of service you would like to see and these will be highlighted on the map. Simply click on a point on the map to view the details of that service including its address and opening times. \n                        </p>\n                        <p>\n<strong>Disclaimer</strong> – This map has been developed as a community tool. B&NES Council doesn’t endorse or verify the services displayed and would encourage users to contact individual services directly for more information. If you have any questions, comments or feedback please get in touch.                        \n                        </p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport './mapThemesModal.css';\n\nexport default (props) => {\n    const themeInfo = (\n        props.themes && props.themes.map((theme) =>\n            <div className=\"media\" key={`mapThemesModal + ${props.themes.indexOf(theme)}`}>\n                <div className=\"icon-container\">\n                    <span className={`fa fa-2x fa-${theme.mapConfig.mapIcon} align-self-start`}></span>\n                </div>\n                <div className=\"media-body\">\n                    <h5 className=\"font-weight-bold\">{theme.Title}</h5>\n                    <p>{theme.Description}</p>\n                </div>\n            </div>\n        )\n    );\n\n    return (\n        <div className=\"modal fade\" id=\"themeModal\" tabIndex=\"-1\" role=\"dialog\"\n             aria-labelledby=\"modalTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title font-weight-bold\" id=\"modalTitle\">Map Themes</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {themeInfo}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport Map from './components/map/map';\nimport Sidebar from './components/sidebar/sidebar';\nimport Navbar from './components/navbar/navbar';\nimport './App.css';\nimport { appThemes } from \"./config\"\nimport Spinner from './components/spinner/spinner';\nimport InformationModal from \"./components/infoModal/informationModal\";\nimport MapThemesModal from \"./components/mapThemesModal/mapThemesModal\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            themeVisibility: {},\n            themeToggle: {},\n            dataLoaded: false,\n            loadedThemes: []\n        };\n\n        // appThemes stores the available themes for the map\n        this.appThemes = appThemes;\n\n        // Bind methods to class\n        this.setThemeState = this.setThemeState.bind(this);\n        this.onDataLoad = this.onDataLoad.bind(this);\n    }\n\n    setThemeState(themeStatus) {\n        this.setState(\n            {\n                themeVisibility: {...this.state.themeVisibility, ...themeStatus},\n                themeToggle: themeStatus,\n            });\n    }\n\n    onDataLoad(theme) {\n        this.setState({dataLoaded: true});\n        this.setThemeState({[theme.Name]: true});\n        this.setState({loadedThemes: [...this.state.loadedThemes, theme]})\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <InformationModal/>\n                <MapThemesModal themes={this.state.loadedThemes}/>\n                <Navbar/>\n                <Sidebar \n                    updateAppTheme={this.setThemeState} \n                    themes={this.state.loadedThemes}\n                    themeToggle={this.state.themeVisibility} \n                />\n                <Spinner showSpinner={!this.state.dataLoaded}/>\n                <Map themes={this.appThemes} themeToggle={this.state.themeToggle} dataLoaded={this.onDataLoad} />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//TODO move polyfills to webpack config\nimport 'react-app-polyfill/ie9';\nimport 'polyfill-array-includes';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const retry = require('p-retry')\nconst Promise = require('pinkie-promise')\nconst {fetch} = require('fetch-ponyfill')({Promise})\nconst {stringify} = require('query-string')\n\nconst endpoint = 'https://overpass-api.de/api/interpreter'\n\nconst queryOverpass = (query) => {\n\tconst attempt = () => {\n\t\treturn fetch(endpoint + '?' + stringify({data: query}), {\n\t\t\t// todo: decide on this\n\t\t\t// yields isomorphic code, but slower due to preflight request?\n\t\t\t// mode: 'cors',\n\t\t\tredirect: 'follow',\n\t\t\theaders: {\n\t\t\t\taccept: 'application/json',\n\t\t\t}\n\t\t})\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\tconst err = new Error(res.statusText)\n\t\t\t\terr.statusCode = res.status\n\t\t\t\tthrow err\n\t\t\t}\n\t\t\treturn res.json()\n\t\t})\n\t\t.then((data) => {\n\t\t\tif (!data || !Array.isArray(data.elements)) {\n\t\t\t\tthrow new Error('invalid response')\n\t\t\t}\n\t\t\treturn data.elements\n\t\t})\n\t}\n\n\treturn retry(attempt, {minTimeout: 500})\n}\n\nmodule.exports = queryOverpass"],"sourceRoot":""}